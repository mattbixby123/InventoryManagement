services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: matthewbixby
      POSTGRES_PASSWORD: inventory123
      POSTGRES_DB: inventory_management
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U matthewbixby -d inventory_management" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - inventory-network
    restart: unless-stopped

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - ./server/.env.docker
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - /app/node_modules
    networks:
      - inventory-network
    command: >
      sh -c " chmod +x /wait-for-postgres.sh && /wait-for-postgres.sh postgres && npx prisma db push && npm run seed && npm run dev "

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    env_file:
      - ./client/.env.docker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next
    networks:
      - inventory-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - inventory-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local

networks:
  inventory-network:
    driver: bridge
